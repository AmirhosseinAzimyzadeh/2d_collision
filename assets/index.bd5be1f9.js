var W=Object.defineProperty;var $=(i,t,o)=>t in i?W(i,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):i[t]=o;var a=(i,t,o)=>($(i,typeof t!="symbol"?t+"":t,o),o);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))e(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const l of n.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&e(l)}).observe(document,{childList:!0,subtree:!0});function o(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerpolicy&&(n.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?n.credentials="include":s.crossorigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function e(s){if(s.ep)return;s.ep=!0;const n=o(s);fetch(s.href,n)}})();class F{constructor(t,o,e){a(this,"mass");a(this,"velocity");a(this,"acceleration");this.mass=t,this.velocity=o,this.acceleration=e}}class I extends F{constructor(o,e,s,n,l){super(o,e,s);a(this,"radius");a(this,"position");a(this,"color");a(this,"reduceVelocityAfterBorderCollision",!1);this.radius=n,this.position=l;const p=Math.floor(Math.random()*255),r=Math.floor(Math.random()*255),d=Math.floor(Math.random()*255);this.color=`rgb(${p}, ${r}, ${d})`}draw(o){o.beginPath(),o.fillStyle=this.color,o.arc(this.position.x,this.position.y,this.radius,0,2*Math.PI),o.fill()}collidesWith(o){return Math.sqrt(Math.pow(this.position.x-o.position.x,2)+Math.pow(this.position.y-o.position.y,2))<=this.radius+o.radius}getNextPosition(o){const e={x:this.velocity.x+this.acceleration.x*o,y:this.velocity.y+this.acceleration.y*o};return{position:{x:this.position.x+e.x*o,y:this.position.y+e.y*o},velocity:e}}handleBorderCollision(o){this.position.x+this.radius>=o.width&&(this.position.x=o.width-this.radius,this.velocity.x*=-1),this.position.x-this.radius<=0&&(this.position.x=this.radius,this.velocity.x*=-1),this.position.y+this.radius>=o.height&&(this.position.y=o.height-this.radius,this.velocity.y*=-1),this.position.y-this.radius<=0&&(this.position.y=this.radius,this.velocity.y*=-1),this.reduceVelocityAfterBorderCollision&&(this.velocity.x*=.999,this.velocity.y*=.999)}}function u(i,t){return i.x*t.x+i.y*t.y}function M(i,t){return{x:i.x+t.x,y:i.y+t.y}}function f(i,t){return{x:i*t.x,y:i*t.y}}function _(i,t){const o=t[i];for(let e=0;e<t.length;e++){if(e===i)continue;const s=o.getNextPosition(g).position,n=t[e].getNextPosition(g).position,p=Math.sqrt(Math.pow(s.x-n.x,2)+Math.pow(s.y-n.y,2))<o.radius+t[e].radius;if(!o.collidesWith(t[e])&&!p)continue;const r={x:t[i].position.x-t[e].position.x,y:t[i].position.y-t[e].position.y},d=Math.sqrt(r.x*r.x+r.y*r.y);r.x/=d,r.y/=d;const y={x:-r.y,y:r.x},x=u(o.velocity,r),C=u(o.velocity,y),v=u(t[e].velocity,r),O=u(t[e].velocity,y),q=((o.mass-t[e].mass)*x+2*t[e].mass*v)/(o.mass+t[e].mass),B=((t[e].mass-o.mass)*v+2*o.mass*x)/(o.mass+t[e].mass),L=f(q,r),b=f(B,r),E=f(C,y),A=f(O,y),R=M(L,E),S=M(b,A);t[i].velocity=R,t[e].velocity=S}}let m=800;const w=new URLSearchParams(window.location.search).get("width");w&&(m=parseInt(w,10));document.querySelector("#app").innerHTML=`
  <div>
    <canvas
      id="canvas"
      width=${m}
      height=${m*.75}
      style="background-color: #000000;"
    >
    </canvas>
    <div>
      <label for="gravity">Gravity</label>
      <input id="gravity" type="number" value="0" step="0.5" />
    </div>
  </div>
`;const g=1/30,V=20,c=document.querySelector("#canvas"),N=c.getContext("2d");let P=0;const H=document.querySelector("#gravity");H.addEventListener("change",i=>{P=parseFloat(i.target.value)});const h=[];for(;h.length<V;){const i=Math.min(c.width,c.height)/V,t=Math.floor(Math.random()*i),o=Math.floor(Math.random()*(c.width-t*2))+t,e=Math.floor(Math.random()*(c.height-t*2))+t,s=new I(t*100,{x:Math.random()*(Math.random()>.5?-1:1)*20,y:Math.random()*(Math.random()>.5?-1:1)*20},{x:0,y:0},t,{x:o,y:e});h.some(n=>n.collidesWith(s))||h.push(s)}function T(){N.clearRect(0,0,c.width,c.height),h.forEach((i,t)=>{i.acceleration.y=P;const{position:o,velocity:e}=i.getNextPosition(g);i.velocity=e,i.position=o,i.handleBorderCollision(c),_(t,h),i.draw(N)}),requestAnimationFrame(T)}T();
